{"version":3,"sources":["components/components/Skills.jsx","components/Form/Form.jsx","components/components/SkillTag.jsx","components/Resume/Resume.jsx","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["animatedComponents","makeAnimated","Skills","skillData","useState","selectedOption","setselectedOption","useEffect","options","value","label","components","defaultValue","onChange","input","isMulti","resumeSchema","yup","shape","firstName","lastName","github","url","email","max","Form","resumeData","useForm","resolver","yupResolver","defaultValues","experience","company","designation","expStartDate","expEndDate","education","institute","degree","eduStartDate","eduEndDate","register","handleSubmit","control","errors","formState","useFieldArray","name","fields","append","remove","eduFields","eduAppend","eduRemove","skills","setSkills","history","useHistory","onSubmit","data","console","log","payload","setTimeout","push","className","placeholder","message","map","item","index","render","field","onBlur","selected","type","onClick","id","expStartData","eduStartData","skillMapped","SkillTag","skillsData","Resume","Date","toISOString","myRef","useRef","html2canvas","current","then","canvas","imgData","toDataURL","pdf","jsPDF","addImage","save","ref","slice","currentPosition","address","phoneNo","biography","exp","expStartdate","expEnddate","eduStartdate","eduEnddate","Navbar","Footer","App","setdata","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c02d80da.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nconst animatedComponents = makeAnimated();\nfunction Skills({ skillData }) {\n  const [selectedOption, setselectedOption] = useState();\n\n  const handleChange = (input) => {\n    setselectedOption(input);\n  };\n  useEffect(() => {\n    skillData(selectedOption);\n  }, [selectedOption]);\n  const options = [\n    { value: \"HTML\", label: \"HTML\" },\n    { value: \"REACTJS\", label: \"REACTJS\" },\n    { value: \"JAVASCRIPT\", label: \"JAVASCRIPT\" },\n    { value: \"CSS\", label: \"CSS\" },\n    { value: \"JAVA\", label: \"JAVA\" },\n    { value: \"REDUX\", label: \"REDUX\" },\n    { value: \"GO\", label: \"GO\" },\n    { value: \"FLUTTER\", label: \"FLUTTER\" },\n  ];\n\n  return (\n    <div>\n      <Select\n        options={options}\n        components={animatedComponents}\n        defaultValue={options[4]}\n        value={selectedOption}\n        onChange={handleChange}\n        isMulti\n      />\n    </div>\n  );\n}\n\nexport default Skills;\n","import React, { useState} from \"react\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport \"./Form.css\";\nimport Skills from \"../components/Skills\";\nimport { useHistory } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\n\nconst resumeSchema = yup.object().shape({\n  firstName: yup.string(),\n  lastName: yup.string(),\n  github: yup.string().url(),\n  email: yup.string().email(\"Must be a valid email\").max(255),\n});\nfunction Form({ resumeData }) {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(resumeSchema),\n    defaultValues: {\n      experience: [\n        { company: \"\", designation: \"\", expStartDate: \"\", expEndDate: \"\" },\n      ],\n      education: [\n        { institute: \"\", degree: \"\", eduStartDate: \"\", eduEndDate: \"\" },\n      ],\n    },\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control, // control props comes from useForm (optional: if you are using FormContext)\n    name: \"experience\", // unique name for your Field Array\n    // keyName: \"id\", default to \"id\", you can change the key name\n  });\n  const {\n    fields: eduFields,\n    append: eduAppend,\n    remove: eduRemove,\n  } = useFieldArray({ control, name: \"education\" });\n\n  const [skills, setSkills] = useState();\n  const history = useHistory();\n\n  const skillData = (data) => {\n    const skillMapped = data?.map((item) => item.value);\n    setSkills(skillMapped);\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"Data is\", data);\n    let payload = data;\n    payload[\"skills\"] = skills;\n    resumeData(payload);\n    setTimeout(() => {\n      history.push(\"/resume\");\n    }, 1000);\n  };\n\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-section\">\n          <h3>Personal Information</h3>\n          <label>First Name</label>\n          <input {...register(\"firstName\")} placeholder=\"first name\" />\n          {errors.firstName && (\n            <p className=\"form-error\">{errors.firstName.message}</p>\n          )}\n          <label>Last Name</label>\n          <input {...register(\"lastName\")} placeholder=\"last name\" />\n          {errors.lastName && (\n            <p className=\"form-error\">{errors.lastName.message}</p>\n          )}\n          <div className=\"form-bio\">\n            <label>Biography</label>\n            <textarea {...register(\"biography\")} placeholder=\"biography\" />\n\n            <label>Current Position</label>\n            <input\n              {...register(\"currentPosition\")}\n              placeholder=\"current position\"\n            />\n\n            <label>Email</label>\n            <input {...register(\"email\")} placeholder=\"email\" />\n            {errors.email && (\n              <p className=\"form-error\">{errors.email.message}</p>\n            )}\n\n            <label>Github Link</label>\n            <input {...register(\"github\")} placeholder=\"github link\" />\n            {errors.github && (\n              <p className=\"form-error\">{errors.github.message}</p>\n            )}\n            <label>Phone No</label>\n            <input {...register(\"phoneNo\")} placeholder=\"phone number\" />\n\n            <label>Address</label>\n            <input {...register(\"address\")} placeholder=\"address\" />\n          </div>\n        </div>\n\n{/* EXPERIENCE */}\n        <div className=\"form-section\">\n          <h3>Experience</h3>\n          <div>\n            {fields.map((item, index) => (\n              <>\n                <li key={item.id}>\n                <label>company</label>\n\n                  <input {...register(`experience.${index}.company`)} />\n                  <label>designation</label>\n\n                  <Controller\n                    render={({ field }) => <input {...field} />}\n                    name={`experience.${index}.designation`}\n                    control={control}\n                  />\n                  <label>start date</label>\n                  <Controller\n                    control={control}\n                    name={`experience.${index}.expStartDate`}\n\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <DatePicker\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        selected={value}\n                      />\n                    )}\n                  />\n\n                  <label>end date</label>\n        \n                   <Controller\n                    control={control}\n                    name={`experience.${index}.expEndDate`}\n\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <DatePicker\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        selected={value}\n                      />\n                    )}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"delete-item\"\n                    onClick={() => remove(index)}\n                  >\n                    Delete\n                  </button>\n                </li>\n              </>\n            ))}\n            <button\n              className=\"addmore-button\"\n              type=\"button\"\n              onClick={() =>\n                append({\n                  company: \"\",\n                  designation: \"\",\n                  expStartData: \"\",\n                  expEndDate: \"\",\n                })\n              }\n            >\n              add item\n            </button>\n          </div>\n        </div>\n\n {/* EDUCATION */}\n        <div className=\"form-section\">\n          <h3>Education</h3>\n          <div>\n            {eduFields.map((item, index) => (\n              <>\n                <label>institute</label>\n\n                <li key={item.id}>\n                  <input {...register(`education.${index}.institute`)} />\n                  <label>degree</label>\n\n                  <Controller\n                    render={({ field }) => <input {...field} />}\n                    name={`education.${index}.degree`}\n                    control={control}\n                  />\n                  <label>start date</label>\n\n                  <section>\n                  <Controller\n                    control={control}\n                    name={`education.${index}.eduStartDate`}\n\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <DatePicker\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        selected={value}\n                      />\n                    )}\n                  />\n                  </section>\n\n                  <label>end date</label>\n                  <Controller\n                    control={control}\n                    name={`education.${index}.eduEndDate`}\n\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <DatePicker\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        selected={value}\n\n                      />\n                    )}\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"delete-item\"\n                    onClick={() => eduRemove(index)}\n                  >\n                    Delete\n                  </button>\n                </li>\n              </>\n            ))}\n          </div>\n          <button\n            className=\"addmore-button\"\n            type=\"button\"\n            onClick={() =>\n              eduAppend({\n                institute: \"\",\n                degree: \"\",\n                eduStartData: \"\",\n                eduEndDate: \"\",\n              })\n            }\n          >\n            add item\n          </button>{\" \"}\n        </div>\n        <div className=\"form-section form-skills\">\n          <h3>Skills</h3>\n          <Skills skillData={skillData} />\n        </div>\n        <input type=\"submit\" />\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction SkillTag({skillsData}) {\n  return (\n    <div className=\"skill-tag\">\n      {skillsData?.map((item) => (\n        <p>{item}</p>\n      ))}\n    </div>\n  );\n}\n\nexport default SkillTag;\n","import React from \"react\";\nimport SkillTag from \"../components/SkillTag\";\nimport \"./Resume.css\";\nimport { useRef } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\nfunction Resume({ data }) {\n  console.log(\"Data incoming\", new Date().toISOString());\n  const myRef = useRef(null);\n  const printDocument = () => {\n    html2canvas(myRef.current).then((canvas) => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF();\n      pdf.addImage(imgData, \"JPEG\", 0, 0);\n      pdf.save(\"resume.pdf\");\n    });\n  };\n\n  return (\n    <>\n      <div className=\"download-resume\">\n        <button className=\"resume-download\" onClick={printDocument}>\n          DOWNLOAD{\" \"}\n        </button>\n      </div>\n      <div className=\"resume\" ref={myRef}>\n        <div className=\"resume-name-tag\">\n          <p>\n            {data?.firstName?.slice(0, 1)}\n            {data?.lastName?.slice(0, 1)}\n          </p>\n        </div>\n        <div className=\"resume-bio\">\n          <h2>{data?.firstName}</h2>\n          <p>{data?.currentPosition}</p>\n          <p className=\"greyed-text\">\n            {data?.address} | {data?.github} | {data?.email} | {data?.phoneNo}{\" \"}\n          </p>\n          <p>{data?.biography}</p>\n        </div>\n        {data?.experience?.map((exp) => (\n          <div className=\"resume-experience\">\n            <h2>WORK EXPERIENCE</h2>\n            <div>\n              <h3>{exp?.company}</h3>\n              <p className=\"greyed-text\">\n                {data?.designation} | {exp?.expStartdate} - {exp?.expEnddate}\n              </p>\n              <ul>\n                <li>\n                  Led scope, planning, and design of the Checkout API with 3\n                  teams and over 25 stakeholders\n                </li>\n                <li>\n                  The Checkout API reduced integration issues by 18% overits\n                  100,000+ users.\n                </li>\n              </ul>\n            </div>\n          </div>\n        ))}\n\n        {/* Education */}\n        {data?.education?.map((education) => (\n          <div className=\"resume-education\">\n            <h3>Education </h3>\n            <p>{education?.institute}</p>\n            <p className=\"greyed-text\">\n              {education?.degree} | {education?.eduStartdate} - \n              {education?.eduEnddate}\n            </p>\n          </div>\n        ))}\n        {/* Skills */}\n        <div className=\"resume-skills\">\n          <h3>SKILLS</h3>\n          <SkillTag skillsData={data?.skills} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Resume;\n","import React from \"react\";\nimport \"./navbar.css\";\n\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <p>\n       <span> make</span>Resume\n      </p>\n    </div>\n  );\n}\nexport default Navbar;\n","import React from \"react\";\nimport \"./Footer.css\";\nexport default function Footer() {\n  return (\n    <footer>\n      <footer id=\"sticky-footer\" >\n        <div className=\"hr-line\"></div>\n        <div className=\"footer-container\">\n          <small>Copyright &copy; MAKE RESUME </small>\n        </div>\n      </footer>\n    </footer>\n  );\n}","import './App.css';\nimport React,{ useState }  from 'react'\nimport Form from './components/Form/Form';\nimport Resume from './components/Resume/Resume';\nimport Navbar from './components/Navbar/Navbar'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  const [data, setdata] = useState()\n  const resumeData =(payload)=>{\n    setdata(payload)\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n          <Navbar/>\n            <Form resumeData={resumeData} />\n            <Footer/>\n          </Route>\n          <Route path=\"/resume\">\n            <Resume data={data} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}